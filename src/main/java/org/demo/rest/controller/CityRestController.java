/*
 * Created on 2020-05-29 ( Time 16:10:06 )
 * Generated by Telosys Tools Generator ( version 3.1.2 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.City;
import org.demo.business.service.CityService;
import org.demo.web.listitem.CityListItem;

/**
 * Spring MVC controller for 'City' management.
 */
@Controller
public class CityRestController {

	@Resource
	private CityService cityService;
	
	@RequestMapping( value="/items/city",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<CityListItem> findAllAsListItems() {
		List<City> list = cityService.findAll();
		List<CityListItem> items = new LinkedList<CityListItem>();
		for ( City city : list ) {
			items.add(new CityListItem( city ) );
		}
		return items;
	}
	
	@RequestMapping( value="/city",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<City> findAll() {
		return cityService.findAll();
	}

	@RequestMapping( value="/city/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public City findOne(@PathVariable("id") Integer id) {
		return cityService.findById(id);
	}
	
	@RequestMapping( value="/city",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public City create(@RequestBody City city) {
		return cityService.create(city);
	}

	@RequestMapping( value="/city/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public City update(@PathVariable("id") Integer id, @RequestBody City city) {
		return cityService.update(city);
	}

	@RequestMapping( value="/city/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		cityService.delete(id);
	}
	
}
