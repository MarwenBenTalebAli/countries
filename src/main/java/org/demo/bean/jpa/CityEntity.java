/*
 * Created on 2020-05-29 ( Time 14:26:37 )
 * Generated by Telosys Tools Generator ( version 3.1.2 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.demo.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import javax.persistence.*;

/**
 * Persistent class for entity stored in table "city"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="city", catalog="world" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="CityEntity.countAll", query="SELECT COUNT(x) FROM CityEntity x" )
} )
public class CityEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="ID", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="Name", nullable=false, length=35)
    private String     name         ;

    @Column(name="District", nullable=false, length=20)
    private String     district     ;

    @Column(name="Population", nullable=false)
    private Integer    population   ;

	// "countrycode" (column "CountryCode") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="CountryCode", referencedColumnName="Code")
    private CountryEntity country     ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public CityEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : Name ( CHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : District ( CHAR ) 
    public void setDistrict( String district ) {
        this.district = district;
    }
    public String getDistrict() {
        return this.district;
    }

    //--- DATABASE MAPPING : Population ( INT ) 
    public void setPopulation( Integer population ) {
        this.population = population;
    }
    public Integer getPopulation() {
        return this.population;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setCountry( CountryEntity country ) {
        this.country = country;
    }
    public CountryEntity getCountry() {
        return this.country;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(name);
        sb.append("|");
        sb.append(district);
        sb.append("|");
        sb.append(population);
        return sb.toString(); 
    } 

}
