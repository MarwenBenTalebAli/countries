/*
 * Created on 2020-05-29 ( Time 14:26:45 )
 * Generated by Telosys Tools Generator ( version 3.1.2 )
 */
package org.demo.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.demo.bean.City;
import org.demo.bean.jpa.CityEntity;
import org.demo.bean.jpa.CountryEntity;
import org.demo.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class CityServiceMapperTest {

	private CityServiceMapper cityServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		cityServiceMapper = new CityServiceMapper();
		cityServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'CityEntity' to 'City'
	 * @param cityEntity
	 */
	@Test
	public void testMapCityEntityToCity() {
		// Given
		CityEntity cityEntity = new CityEntity();
		cityEntity.setName(mockValues.nextString(35));
		cityEntity.setDistrict(mockValues.nextString(20));
		cityEntity.setPopulation(mockValues.nextInteger());
		cityEntity.setCountry(new CountryEntity());
		cityEntity.getCountry().setCode(mockValues.nextString(3));
		
		// When
		City city = cityServiceMapper.mapCityEntityToCity(cityEntity);
		
		// Then
		assertEquals(cityEntity.getName(), city.getName());
		assertEquals(cityEntity.getDistrict(), city.getDistrict());
		assertEquals(cityEntity.getPopulation(), city.getPopulation());
		assertEquals(cityEntity.getCountry().getCode(), city.getCountrycode());
	}
	
	/**
	 * Test : Mapping from 'City' to 'CityEntity'
	 */
	@Test
	public void testMapCityToCityEntity() {
		// Given
		City city = new City();
		city.setName(mockValues.nextString(35));
		city.setDistrict(mockValues.nextString(20));
		city.setPopulation(mockValues.nextInteger());
		city.setCountrycode(mockValues.nextString(3));

		CityEntity cityEntity = new CityEntity();
		
		// When
		cityServiceMapper.mapCityToCityEntity(city, cityEntity);
		
		// Then
		assertEquals(city.getName(), cityEntity.getName());
		assertEquals(city.getDistrict(), cityEntity.getDistrict());
		assertEquals(city.getPopulation(), cityEntity.getPopulation());
		assertEquals(city.getCountrycode(), cityEntity.getCountry().getCode());
	}

}